{"version":3,"sources":["components/HeaderComponent.js","components/ItemSelector.js","components/ToolsSideBar.js","components/imageDrag.js","components/Canvas.js","components/FooterComponent.js","components/MainComponent.js","DragAPI.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","state","isDropDownOpen","isModalOpen","image","file","toggleDropDown","bind","onDrop","toggleModal","imageAdd","this","setState","picture","length","Blob","type","element","document","getElementById","html2canvas","allowTaint","windowWidth","width","windowHeight","height","then","canvas","uri","filename","link","createElement","download","href","body","appendChild","click","removeChild","window","open","saveAs","toDataURL","addImage","URL","createObjectURL","alert","Navbar","className","dark","NavbarBrand","src","alt","Nav","Dropdown","isOpen","toggle","size","DropdownToggle","caret","id","DropdownMenu","style","zIndex","right","DropdownItem","header","onClick","takeScreenshot","Modal","ModalHeader","withIcon","withPreview","buttonText","onChange","imgExtension","maxFileSize","singleImage","ModalFooter","Component","RenderLeftArrow","ClickFunction","page","icon","faArrowLeft","RenderRightArrow","faArrowRight","Select","imageClick","e","x","y","evt","originalEvent","touch","touches","changedTouches","pageX","pageY","clientX","clientY","onImageClick","curPage","RenderImageRow","handleArrowDecrease","handleArrowIncrease","imageSet","map","RenderBar","delButtonPressed","createButtonPressed","RenderSideBar","RenderMobileBar","DelBtnClickFunction","createBtnClickFunction","onDelButtonClick","createWordButtonToggle","Row","backgroundColor","faPencilAlt","faEraser","Col","RenderImage","deleteImage","onSelectImage","coordinateX","cordx","coordinatesY","cordy","onMouseDown","onTouchStart","selected","top","left","imgUrl","placeholder","RenderDragableImages","activeImages","dragImages","RenderCanvas","createNewWord","dragImage","Footer","Main","createNewArray","item","newDragImages","selectedID","find","selectedImg","selectedZindex","delButtonToggle","cursor","deleteOnSelect","createWord","xx","yy","typee","idd","target","remove","updatedArray","filter","removeImage","console","log","toolbtns","current","changeCreatebtn","activeImageArray","CancelSelect","selectedItem","nodeName","React","createRef","onclick","Container","fluid","ref","dragMoveListener","event","parseFloat","getAttribute","dx","dy","transform","setAttribute","interact","draggable","inertia","modifiers","restrictRect","endOnly","autoScroll","listeners","move","end","resizable","edges","bottom","rect","deltaRect","textContent","Math","round","restrictEdges","restrictSize","min","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.460e6f3c.chunk.js","sourcesContent":["import React, {Component, createRef, useState } from \"react\";\r\nimport ImageUploader from 'react-images-upload';\r\nimport { Navbar, Nav, NavItem, NavbarBrand, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport html2canvas from \"html2canvas\";\r\n\r\nfunction  saveAs(uri, filename) {\r\n\r\n    var link = document.createElement('a');\r\n\r\n    if (typeof link.download === 'string') {\r\n\r\n        link.href = uri;\r\n        link.download = filename;\r\n\r\n        //Firefox requires the link to be in the body\r\n        document.body.appendChild(link);\r\n\r\n        //simulate click\r\n        link.click();\r\n\r\n        //remove the link when done\r\n        document.body.removeChild(link);\r\n\r\n    } else {\r\n\r\n        window.open(uri);\r\n\r\n    }\r\n}\r\nclass Header extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            isDropDownOpen: false,\r\n            isModalOpen: false,\r\n            image: '',\r\n            file: null\r\n        }\r\n        this.toggleDropDown = this.toggleDropDown.bind(this);\r\n        this.onDrop = this.onDrop.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.imageAdd = this.imageAdd.bind(this);\r\n       \r\n    }\r\n    toggleDropDown() {\r\n        this.setState({\r\n            isDropDownOpen: !this.state.isDropDownOpen\r\n          });\r\n\r\n      }\r\n      toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n            \r\n          });\r\n\r\n      }\r\n      onDrop(picture) {\r\n          \r\n          if(picture.length) //if pictures isn't an empty object\r\n          {\r\n            this.setState({\r\n                file: new Blob(picture, {type: \"image/png\"})\r\n            })\r\n          }\r\n    }\r\n      //Snippet taken from https://stackoverflow.com/questions/31656689/how-to-save-img-to-users-local-computer-using-html2canvas\r\n   \r\n      takeScreenshot()\r\n      {\r\n          let element = document.getElementById('canvas-container')\r\n          if(element != null)\r\n            html2canvas(element, { allowTaint: false , windowWidth: element.width,\r\n                windowHeight: element.height}).then(function(canvas) {\r\n                    saveAs(canvas.toDataURL(), 'paveiksliukas.png');\r\n            });\r\n            this.setState({\r\n                isDropDownOpen: !this.state.isDropDownOpen\r\n              });\r\n      }\r\n      imageAdd(){\r\n        if(this.state.file !== null){\r\n            this.props.addImage(URL.createObjectURL(this.state.file),\"400px\",\"400px\",\"50vw\",\"50vh\",\"image\");   \r\n            this.setState({\r\n                file: null\r\n            })\r\n            this.toggleModal();  \r\n        }else {\r\n            alert(\"Pasirinkite paveiksliuką!\");\r\n        } \r\n      }\r\n\r\n    render()\r\n    {   \r\n        return(\r\n\r\n            <div>\r\n            \r\n                <Navbar className=\"unselect\" dark>\r\n                    <div className=\"container\">\r\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='logo' /></NavbarBrand>\r\n                        <Nav className=\"ml-auto\">\r\n                        \r\n                            <Dropdown isOpen={this.state.isDropDownOpen} toggle={this.toggleDropDown} size=\"lg\">\r\n                            <DropdownToggle caret id =\"drop-custom\">\r\n                                    ...\r\n                            </DropdownToggle>\r\n                                <DropdownMenu style={{zIndex: \"9999999999\"}}  right>\r\n                                    <DropdownItem header>Pasirinkimai</DropdownItem>\r\n                                    <DropdownItem onClick={() => this.takeScreenshot()} >parsiųsk nuotrauką</DropdownItem>\r\n                                    <DropdownItem onClick={() => this.toggleModal()}>Įkelti savo nuotrauką</DropdownItem>\r\n                                </DropdownMenu>\r\n                            </Dropdown>\r\n                            \r\n                        \r\n                        </Nav>\r\n                    </div>\r\n                </Navbar>\r\n\r\n                <Modal zIndex='9999999' isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader  toggle={this.toggleModal}>Pasirinkite paveiksliuką</ModalHeader>\r\n                    \r\n                    <ImageUploader\r\n                withIcon={true}\r\n                withPreview={true}\r\n                buttonText='Choose images'\r\n                onChange={this.onDrop}\r\n                imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n                maxFileSize={5242880}\r\n                singleImage={true}\r\n            />\r\n                   \r\n                   \r\n                    <ModalFooter>\r\n                    <button onClick={this.imageAdd} className=\"tool-btn p-1\">Ikelti paveiksliuką</button>\r\n                    </ModalFooter>\r\n      </Modal>\r\n               \r\n        </div>\r\n\r\n        );\r\n        \r\n            \r\n        \r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft, faArrowRight } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\n\r\nconst RenderLeftArrow = ({ClickFunction, page}) =>\r\n{\r\n    if(page > 0)\r\n        return(\r\n\r\n            <div className=\"col-2 d-flex justify-content-center align-items-center unselect\"  >\r\n                <button onClick={() => ClickFunction()} className=\"unstyled\"><FontAwesomeIcon icon={faArrowLeft} className=\"active arrow\" /> </button>\r\n            </div>   \r\n        );\r\n    else\r\n        return(\r\n\r\n            <div className=\"col-2 d-flex justify-content-center align-items-center unselect\"  >\r\n                <button className=\"unstyled\"><FontAwesomeIcon icon={faArrowLeft} className=\"arrow\" /> </button>\r\n            </div>   \r\n        );\r\n\r\n}\r\nconst RenderRightArrow = ({ClickFunction, page}) =>\r\n{\r\n    if(page < 2)\r\n        return(\r\n\r\n            <div className=\"col-2 d-flex justify-content-center align-items-center unselect\"  >\r\n                <button onClick={() => ClickFunction()} className=\"unstyled\"><FontAwesomeIcon  icon={faArrowRight} className=\"active arrow\" /> </button>\r\n            </div>   \r\n        );\r\n    else\r\n        return(\r\n\r\n            <div className=\"col-2 d-flex justify-content-center align-items-center unselect\"  >\r\n                <button className=\"unstyled\"><FontAwesomeIcon  icon={faArrowRight} className=\"arrow\" /> </button>\r\n            </div>   \r\n        );\r\n\r\n}\r\nclass Select extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            curPage: 0,\r\n            page: [\r\n                [\r\n                    [\"./assets/detalės-architektūros/detalės_akantas.png\", 0, true],\r\n                    [\"./assets/detalės-architektūros/detalės_dorėninė kolona.png\", 1, true],\r\n                    [\"./assets/detalės-architektūros/detalės_durys atidarytos.png\", 2, true],\r\n                    [\"./assets/detalės-architektūros/detalės_durys puošnios.png\", 3, true],\r\n                    [\"./assets/detalės-architektūros/detalės_durys.png\", 4, true]        \r\n                ],\r\n                [\r\n                    [\"./assets/fasadai/fasadas_antkapinis paminklas.png\", 5, true],\r\n                    [\"./assets/fasadai/fasadas_itališka koplyčia.png\", 6, true],\r\n                    [\"./assets/fasadai/fasadas_mykolo png.png\", 7, true], \r\n                          \r\n                ],\r\n                [\r\n                    [\"./assets/personažai/Animacija - vitruvijus rate.png\", 8, true],\r\n                    [\"./assets/personažai/personažai_bona.png\", 9, true],\r\n                    [\"./assets/personažai/personažai_darbininkas.png\", 10, true],\r\n                    [\"./assets/personažai/personažai_mykolas mojuoja.png\", 11, true],\r\n                    [\"./assets/personažai/personažai_mykolas sėdi.png\", 12, true],\r\n                    [\"./assets/personažai/personažai_renesanso žmogus.png\", 13, true] ,  \r\n                    [\"./assets/personažai/personažai_sapiega.png\", 14, true],   \r\n                    [\"./assets/personažai/personažai_vienuolės.png\", 15, true], \r\n                              \r\n                ]\r\n            ]\r\n\r\n        };\r\n        this.RenderImageRow = this.RenderImageRow.bind(this);\r\n        this.handleArrowDecrease = this.handleArrowDecrease.bind(this);\r\n        this.handleArrowIncrease = this.handleArrowIncrease.bind(this);\r\n        this.imageClick = this.imageClick.bind(this);\r\n    }\r\n    imageClick =(e, {image}) => {\r\n        var x, y;\r\n        if(e.type == 'touchstart' || e.type == 'touchmove' || e.type == 'touchend' || e.type == 'touchcancel'){\r\n            var evt = (typeof e.originalEvent === 'undefined') ? e : e.originalEvent;\r\n            var touch = evt.touches[0] || evt.changedTouches[0];\r\n            x = touch.pageX;\r\n            y = touch.pageY;\r\n        } else if (e.type == 'mousedown' || e.type == 'mouseup' || e.type == 'mousemove' || e.type == 'mouseover'|| e.type=='mouseout' || e.type=='mouseenter' || e.type=='mouseleave') {\r\n            x = e.clientX;\r\n            y = e.clientY;\r\n        }\r\n        else{\r\n            x=e.clientX;\r\n            y=e.clientY;\r\n        }\r\n     //   image[2] = false; //prevents the image from being displayed in the img bar\r\n        this.props.onImageClick(image[0], 300, 300, x, y, \"image\");\r\n        this.setState(this.state);\r\n    }\r\n    handleArrowDecrease()\r\n    {\r\n        if(this.state.curPage >= 0)\r\n        {\r\n            this.setState({\r\n                curPage: this.state.curPage - 1\r\n            })\r\n        } \r\n    }\r\n    handleArrowIncrease()\r\n    {\r\n        this.setState({\r\n            curPage: this.state.curPage + 1\r\n        })\r\n    }\r\n     RenderImageRow()\r\n    {\r\n        const imageSet = this.state.page[this.state.curPage].map((image) => {\r\n            if(image[2])\r\n                return(\r\n                    \r\n                    <div className=\"images m-1\"> <img key={image[1]} onClick={(e) => this.imageClick(e, {image})}height=\"100%\" width=\"100%\" src={image[0]}></img></div>  \r\n                );     \r\n      });\r\n    return(\r\n                <div className=\"row\">\r\n                    <RenderLeftArrow ClickFunction={() => this.handleArrowDecrease()} page={this.state.curPage}/>\r\n                    <div className=\"col-8\">     \r\n                        <div className=\"image-row\">\r\n                        {imageSet}\r\n                        </div>\r\n                        </div>\r\n                   <RenderRightArrow ClickFunction={() => this.handleArrowIncrease()} page={this.state.curPage} />\r\n                </div>\r\n    );\r\n}\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                {this.RenderImageRow()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Select;","//this will be very easy, right?\r\n//OFFCANVAS\r\nimport React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { faEraser, faMousePointer, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Component } from \"react\";\r\n\r\n class RenderBar extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            delButtonPressed: false,\r\n            createButtonPressed: false\r\n        }\r\n        this.RenderSideBar = this.RenderSideBar.bind(this);\r\n        this.RenderMobileBar = this.RenderMobileBar.bind(this);\r\n        this.DelBtnClickFunction = this.DelBtnClickFunction.bind(this);\r\n        this.createBtnClickFunction = this.createBtnClickFunction.bind(this);\r\n    }\r\n    DelBtnClickFunction()  {\r\n        this.props.onDelButtonClick();\r\n        this.setState({\r\n            delButtonPressed: !this.state.delButtonPressed\r\n        });\r\n    }\r\n    createBtnClickFunction()  {\r\n        this.props.createWordButtonToggle();\r\n        this.setState({\r\n            createButtonPressed: !this.state.createButtonPressed\r\n        });\r\n    }\r\n    changeCreatebtn() {\r\n        this.setState({\r\n            createButtonPressed: !this.state.createButtonPressed\r\n        });\r\n    }\r\n    RenderSideBar(){\r\n        return(\r\n            <div className=\"col-2 d-none d-md-block\">\r\n         \r\n            <Row><button style={{backgroundColor: this.state.createButtonPressed ? '#d40b1b' : '#512DA8'}} \r\n            onClick={this.createBtnClickFunction} className=\"tool-btn mb-2\"><FontAwesomeIcon icon={faPencilAlt}/></button></Row>\r\n            <Row><button style={{backgroundColor: this.state.delButtonPressed ? '#d40b1b' : '#512DA8'}} \r\n            onClick={this.DelBtnClickFunction} className=\"tool-btn mb-2\"><FontAwesomeIcon icon={faEraser}/></button></Row>\r\n            </div>\r\n        );\r\n    }\r\n    RenderMobileBar(){\r\n        return(\r\n            <div className=\"row d-md-none mb-2\">\r\n            <Col><button style={{backgroundColor: this.state.createButtonPressed ? '#d40b1b' : '#512DA8'}} \r\n            onClick={this.createBtnClickFunction} className=\"tool-btn mb-2\"><FontAwesomeIcon icon={faPencilAlt}/></button></Col>\r\n            <Col><button style={{backgroundColor: this.state.delButtonPressed ? '#d40b1b' : '#512DA8'}} \r\n            onClick={this.DelBtnClickFunction} className=\"tool-btn mb-2\"><FontAwesomeIcon icon={faEraser}/></button>  </Col>\r\n            </div> \r\n        );\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <>\r\n            {this.RenderSideBar()}\r\n            {this.RenderMobileBar()}\r\n            \r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n\r\n }   \r\n\r\n\r\n\r\n\r\nexport default RenderBar;\r\n","import React from \"react\";\r\n\r\n\r\n\r\nconst RenderImage = ({deleteImage, onSelectImage, image}) => {\r\n    \r\n    var coordinateX=image.cordx-image.width/2;\r\n    var coordinatesY=image.cordy-image.height/2;\r\n    if(image.type == \"image\")\r\n    {\r\n        return(\r\n            <img onClick={(e) => deleteImage(e, {image})} key={image.id} onMouseDown={(e) => onSelectImage(e, {image})} onTouchStart={(e) => onSelectImage(e, {image})} \r\n            className={`draggable ${image.selected ? \"selected\" : \"\"}`} style={{zIndex: image.zIndex, top: coordinatesY, left: coordinateX }}\r\n            src={image.imgUrl} width={image.width} height={image.height}/>\r\n           \r\n        );\r\n    } else if(image.type == \"textbox\"){\r\n        return(\r\n            <input placeholder=\".....\"onClick={(e) => deleteImage(e, {image})} key={image.id} onMouseDown={(e) => onSelectImage(e, {image})} onTouchStart={(e) => onSelectImage(e, {image})} \r\n            className={`draggable ${image.selected ? \"selected\" : \"\"}`} style={{zIndex: image.zIndex, top: image.cordy, left: image.cordx}}\r\n             width={image.width} height={image.height} type=\"text\"></input>\r\n        );\r\n    }\r\n \r\n}\r\n\r\nconst RenderDragableImages = (props) => {\r\n    const activeImages = props.dragImages.map((image) => {\r\n            return(\r\n                <RenderImage deleteImage={props.deleteImage} onSelectImage={props.onSelectImage} image={image}/>  \r\n        );\r\n});\r\n    return(\r\n        <>\r\n        {activeImages}\r\n        </>\r\n    );\r\n    }\r\n\r\n\r\nexport default RenderDragableImages;","import React from \"react\";\r\nimport DragableImages from './imageDrag';\r\nconst RenderCanvas= (props) =>\r\n{\r\n\r\n    return(\r\n        <>\r\n        \r\n        \r\n        <div onClick={props.createNewWord} id=\"canvas-container\">\r\n        <DragableImages deleteImage={props.deleteImage} onSelectImage={props.onSelectImage} dragImages={props.dragImage}/>\r\n\r\n        </div>\r\n        </>\r\n\r\n    );\r\n}\r\n\r\nexport default RenderCanvas;","import React from \"react\";\r\n\r\n\r\nconst Footer = () =>\r\n{\r\n\r\n    return(\r\n        <div className=\"footer unselect\"></div>\r\n    );\r\n\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport NavBar from './HeaderComponent';\r\nimport Select from './ItemSelector';\r\nimport RenderBar from './ToolsSideBar';\r\nimport { Container } from 'reactstrap';\r\nimport RenderCanvas from './Canvas';\r\nimport Footer from './FooterComponent';\r\n\r\n\r\n\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state= {\r\n\r\n            dragImage: [],\r\n            selectedID: null,\r\n            deleteOnSelect: false,\r\n            createWord: false,\r\n            cursor: 'default',\r\n            selectedZindex: 1\r\n        }\r\n        this.toolbtns = React.createRef();\r\n    }\r\n    //Creates a new object array with the new item added to it  \r\n    createNewArray = (item) =>\r\n    {\r\n        let newDragImages = [...this.state.dragImage, item]\r\n        if(this.state.selectedID!= null)\r\n            {\r\n                newDragImages.find(selectedImg => selectedImg.id === this.state.selectedID).selected = false; //changes the selected item\r\n                newDragImages.find(selectedImg => selectedImg.id === this.state.selectedID).zIndex = this.state.selectedZindex;\r\n            }\r\n        return newDragImages;\r\n\r\n    }\r\n    delButtonToggle = () => {\r\n        \r\n      \r\n        var cursor = !this.state.deleteOnSelect ? 'alias' : 'default';\r\n        this.setState({\r\n            deleteOnSelect: !this.state.deleteOnSelect,\r\n            cursor: cursor\r\n        })\r\n    }\r\n    createWordButtonToggle = () => {\r\n        var cursor = !this.state.createWord ? 'alias' : 'default';\r\n        this.setState({\r\n            createWord: !this.state.createWord,\r\n            cursor: cursor\r\n        })\r\n    }\r\n    onImageClick = (imgUrl, width, height, xx, yy, typee) =>{\r\n        var idd = this.state.dragImage.length;\r\n        let item = {\r\n            type: typee,\r\n            imgUrl: imgUrl, \r\n            width: width,\r\n            height: height,\r\n            cordx: xx,\r\n            cordy: yy,\r\n            id: idd,\r\n            zIndex: 999999,\r\n            selected: true\r\n            } \r\n            \r\n        let newDragImages = this.createNewArray(item);\r\n            \r\n            this.setState({\r\n                dragImage: newDragImages,\r\n                selectedID: idd,\r\n                selectedZindex: this.state.selectedZindex+1\r\n            })\r\n    }\r\n    deleteImage = (e, {image}) =>\r\n    {\r\n        if(this.state.deleteOnSelect)\r\n        {\r\n            e.target.remove();\r\n\r\n            let updatedArray = [...this.state.dragImage]; //make a copy of the state\r\n                updatedArray.filter(removeImage => removeImage !== {image})\r\n             //changes the selected item\r\n            this.setState({\r\n                dragImage: updatedArray,\r\n                selectedID: null\r\n            })\r\n        }\r\n    }\r\n    createNewWord = (e) => {\r\n        if(this.state.createWord) {\r\n            var x, y;\r\n            if(e.type == 'touchstart' || e.type == 'touchmove' || e.type == 'touchend' || e.type == 'touchcancel'){\r\n                var evt = (typeof e.originalEvent === 'undefined') ? e : e.originalEvent;\r\n                var touch = evt.touches[0] || evt.changedTouches[0];\r\n                x = touch.pageX;\r\n                y = touch.pageY;\r\n            } else if (e.type == 'mousedown' || e.type == 'mouseup' || e.type == 'mousemove' || e.type == 'mouseover'|| e.type=='mouseout' || e.type=='mouseenter' || e.type=='mouseleave') {\r\n                x = e.clientX;\r\n                y = e.clientY;\r\n            }\r\n            else{\r\n                x=e.clientX;\r\n                y=e.clientY;\r\n            }\r\n            console.log(x);\r\n            \r\n            this.onImageClick(\"\",\"auto\",\"auto\",x,y,\"textbox\"); //creates new text box\r\n            this.createWordButtonToggle();\r\n            this.toolbtns.current.changeCreatebtn();\r\n        }\r\n\r\n    }\r\n    //changes the selected image\r\n    onSelectImage = (e, {image}) =>\r\n    {\r\n        if(image.id != this.state.selectedID)\r\n        {\r\n            let activeImageArray = [...this.state.dragImage]; //make a copy of the state\r\n            if(this.state.selectedID!= null)\r\n            {\r\n                activeImageArray.find(selectedImg => selectedImg.id === this.state.selectedID).selected = false; //changes the selected item\r\n                activeImageArray.find(selectedImg => selectedImg.id === this.state.selectedID).zIndex = this.state.selectedZindex;\r\n            }\r\n            activeImageArray.find(selectedImg => selectedImg.id === image.id).selected = true; //finds the item selected\r\n            activeImageArray.find(selectedImg => selectedImg.id === image.id).zIndex = 99999;\r\n            this.setState({\r\n                dragImage: activeImageArray,\r\n                selectedID: image.id,\r\n                selectedZindex: this.state.selectedZindex+1\r\n            })\r\n\r\n        }\r\n\r\n\r\n    }\r\n    CancelSelect = (e) =>\r\n    {  \r\n        var selectedItem = e.target.nodeName;\r\n        if(this.state.selectedID!= null && selectedItem != 'IMG')\r\n        {\r\n           \r\n            let activeImageArray = [...this.state.dragImage]; //make a copy of the state\r\n            activeImageArray.find(selectedImg => selectedImg.id === this.state.selectedID).selected = false; //changes the selected item\r\n            activeImageArray.find(selectedImg => selectedImg.id === this.state.selectedID).zIndex = this.state.selectedZindex;\r\n            this.setState({\r\n                dragImage: activeImageArray,\r\n                selectedID: null,\r\n                \r\n            })\r\n        }\r\n    }\r\n    \r\n    render()\r\n    {\r\n        window.onclick = (e) => this.CancelSelect(e); //cancels the select on click\r\n        return(\r\n            \r\n            <div style={{cursor: this.state.cursor}}>\r\n                \r\n                <NavBar addImage={this.onImageClick} />\r\n                <Container fluid=\"lg unselect\">\r\n                    <div className=\"row mt-2 unselect\">\r\n                        \r\n                            <Select onImageClick={this.onImageClick}/>\r\n                        \r\n                    </div>\r\n                    \r\n                    <div className=\"row mt-2\">\r\n                        <RenderBar ref={this.toolbtns} createWordButtonToggle={this.createWordButtonToggle} onDelButtonClick={this.delButtonToggle}/>\r\n                    <div className=\"col-12 col-md-10\" > <RenderCanvas createNewWord={this.createNewWord} deleteImage={this.deleteImage} onSelectImage={this.onSelectImage} dragImage={this.state.dragImage}/> </div>\r\n                        \r\n                    </div>\r\n                </Container>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","\r\nimport interact from 'interactjs'\r\n\r\ninteract('.draggable')\r\n    .draggable({\r\n      // disable inertial throwing\r\n      inertia: false,\r\n      // keep the element within the area of it's parent\r\n      modifiers: [\r\n        interact.modifiers.restrictRect({\r\n        \r\n          endOnly: true\r\n        })\r\n      ],\r\n      // enable autoScroll\r\n      autoScroll: true,\r\n  \r\n      listeners: {\r\n        // call this function on every dragmove event\r\n        move: dragMoveListener,\r\n  \r\n        // call this function on every dragend event\r\n        end: ( event) => {\r\n       //   event.target.style.zIndex=\"1\";\r\n        }\r\n      }\r\n    }).resizable({\r\n        // resize from all edges and corners\r\n        edges: { left: true, right: true, bottom: true, top: true },\r\n    \r\n        listeners: {\r\n          move (event) {\r\n            var target = event.target\r\n            var x = (parseFloat(target.getAttribute('data-x')) || 0)\r\n            var y = (parseFloat(target.getAttribute('data-y')) || 0)\r\n    \r\n            // update the element's style\r\n            target.style.width = event.rect.width + 'px'\r\n            target.style.height = event.rect.height + 'px'\r\n    \r\n            // translate when resizing from top or left edges\r\n            x += event.deltaRect.left\r\n            y += event.deltaRect.top\r\n    \r\n            target.style.transform = 'translate(' + x + 'px,' + y + 'px)'\r\n    \r\n            target.setAttribute('data-x', x)\r\n            target.setAttribute('data-y', y)\r\n            target.textContent = Math.round(event.rect.width) + '\\u00D7' + Math.round(event.rect.height)\r\n          }\r\n        },\r\n        modifiers: [\r\n          // keep the edges inside the parent\r\n          interact.modifiers.restrictEdges({\r\n           \r\n          }),\r\n    \r\n          // minimum size\r\n          interact.modifiers.restrictSize({\r\n            min: { width: 100, height: 50 }\r\n          })\r\n        ],\r\n    \r\n        inertia: false\r\n      })\r\n    function dragMoveListener (event) {\r\n        var target = event.target\r\n       // target.style.zIndex = \"99999999\";\r\n        // keep the dragged position in the data-x/data-y attributes\r\n        var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx\r\n        var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy\r\n      \r\n        // translate the element\r\n        target.style.transform = 'translate(' + x + 'px, ' + y + 'px)'\r\n      \r\n        // update the posiion attributes\r\n        target.setAttribute('data-x', x)\r\n        target.setAttribute('data-y', y)\r\n      }\r\n      \r\n      // this function is used later in the resizing and gesture demos\r\n      window.dragMoveListener = dragMoveListener","\nimport './App.css';\nimport Main from './components/MainComponent';\nimport './DragAPI';\nfunction App() {\n  return (\n    \n    <Main />\n    \n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { HashRouter as Router } from \"react-router-dom\"\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}