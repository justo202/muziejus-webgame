{"version":3,"sources":["components/HeaderComponent.js","components/ItemSelector.js","components/ToolsSideBar.js","components/imageDrag.js","components/Canvas.js","components/FooterComponent.js","components/MainComponent.js","DragAPI.js","App.js","reportWebVitals.js","index.js"],"names":["url","a","outputFile","removeBackgroundFromImageUrl","path","apiKey","size","type","result","console","log","creditsCharged","resultWidth","resultHeight","detectedType","base64img","substring","rateLimit","rateLimitRemaining","rateLimitReset","retryAfter","errors","JSON","stringify","Header","props","state","isDropDownOpen","isModalOpen","image","file","toggleDropDown","bind","onDrop","toggleModal","imageAdd","this","setState","picture","length","Blob","element","document","getElementById","html2canvas","allowTaint","windowWidth","width","windowHeight","height","then","canvas","uri","filename","link","createElement","download","href","body","appendChild","click","removeChild","window","open","saveAs","toDataURL","addImage","URL","createObjectURL","removeFromImgUrl","alert","Navbar","className","dark","Nav","Dropdown","isOpen","toggle","DropdownToggle","caret","id","DropdownMenu","style","zIndex","right","DropdownItem","header","onClick","takeScreenshot","Modal","ModalHeader","withIcon","withPreview","buttonText","onChange","imgExtension","maxFileSize","singleImage","ModalFooter","Component","RenderLeftArrow","ClickFunction","page","icon","faArrowLeft","RenderRightArrow","faArrowRight","Select","imageClick","e","x","y","bounds","getBoundingClientRect","onImageClick","curPage","RenderImageRow","handleArrowDecrease","handleArrowIncrease","number","imageSet","viewFolder","faFolder","map","maxWidth","maxHeight","src","changeCanvasBackground","RenderBar","delButtonPressed","createButtonPressed","fontSize","fontSelectActive","textID","RenderSideBar","RenderMobileBar","DelBtnClickFunction","createBtnClickFunction","toggleDropDowns","changeFontSize","prevState","onDelButtonClick","createWordButtonToggle","changeFont","dropDownItems","onMouseDown","onTouchStart","inNavbar","textAlign","backgroundColor","Row","faPencilAlt","faEraser","RenderDropDownMenu","Col","RenderImage","deleteImage","onSelectImage","coordinateX","cordx","coordinatesY","cordy","selected","top","left","imgUrl","faCircleNotch","textSize","placeholder","RenderDragableImages","activeImages","dragImages","RenderCanvas","backgroundImage","backgroundURL","backgroundSize","backgroundRepeat","createNewWord","dragImage","Footer","Main","createNewArray","item","newDragImages","selectedID","find","selectedImg","tempArray","selectedTextBox","delButtonToggle","cursor","deleteOnSelect","createWord","getZindex","imageType","zindex","selectedZindex","xx","yy","typee","idd","imagePrio","target","parentNode","remove","updatedArray","filter","removeImage","toolbtns","current","enableDropBtn","evt","originalEvent","touch","touches","changedTouches","pageX","pageY","clientX","clientY","changeCreatebtn","activeImageArray","CancelSelect","selectedItem","nodeName","canvasRef","changeBackground","React","createRef","onclick","Container","fluid","ref","getDragAngle","event","box","parentElement","startAngle","parseFloat","getAttribute","center","Math","atan2","dragMoveListener","dx","dy","transform","setAttribute","interact","draggable","inertia","modifiers","restrictRect","endOnly","autoScroll","listeners","move","end","resizable","edges","bottom","rect","deltaRect","restrictEdges","restrictSize","min","onstart","onmove","pos","angle","onend","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.f0591a81.chunk.js","sourcesContent":["import React, {Component, createRef, useState } from \"react\";\r\nimport ImageUploader from 'react-images-upload';\r\nimport { Navbar, Nav, NavItem, NavbarBrand, Dropdown, DropdownToggle, DropdownMenu, DropdownItem, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport html2canvas from \"html2canvas\";\r\nimport { RemoveBgResult, RemoveBgError, removeBackgroundFromImageFile, removeBackgroundFromImageUrl } from \"remove.bg\";\r\n\r\n\r\nasync function removeFromImgUrl(url) {\r\n    try {\r\n        \r\n      const outputFile = \"./img-removed-from-url.png\";\r\n      const result = await removeBackgroundFromImageUrl({\r\n        path: url,\r\n        apiKey: \"4ZfXWakShACXzcmxDuJxNrGt\",\r\n        size: \"regular\",\r\n        type: \"product\",\r\n        outputFile\r\n      });\r\n  \r\n      console.log(`File saved to ${outputFile}`);\r\n      console.log(`${result.creditsCharged} credit(s) charged for this image`);\r\n      console.log(`Result width x height: ${result.resultWidth} x ${result.resultHeight}, type: ${result.detectedType}`);\r\n      console.log(result.base64img.substring(0, 40) + \"..\");\r\n      console.log(`Rate limit: ${result.rateLimit}, remaining: ${result.rateLimitRemaining}, reset: ${result.rateLimitReset}, retryAfter: ${result.retryAfter}`);\r\n    } catch (e) {\r\n      const errors = e;\r\n      console.log(JSON.stringify(errors));\r\n    }\r\n    return null;\r\n  }\r\n\r\nfunction  saveAs(uri, filename) {\r\n\r\n    var link = document.createElement('a');\r\n\r\n    if (typeof link.download === 'string') {\r\n\r\n        link.href = uri;\r\n        link.download = filename;\r\n\r\n        //Firefox requires the link to be in the body\r\n        document.body.appendChild(link);\r\n\r\n        //simulate click\r\n        link.click();\r\n\r\n        //remove the link when done\r\n        document.body.removeChild(link);\r\n\r\n    } else {\r\n\r\n        window.open(uri);\r\n\r\n    }\r\n}\r\n\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            isDropDownOpen: false,\r\n            isModalOpen: false,\r\n            image: '',\r\n            file: null\r\n        }\r\n        this.toggleDropDown = this.toggleDropDown.bind(this);\r\n        this.onDrop = this.onDrop.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.imageAdd = this.imageAdd.bind(this);\r\n       \r\n    }\r\n    toggleDropDown() {\r\n        this.setState({\r\n            isDropDownOpen: !this.state.isDropDownOpen\r\n          });\r\n\r\n\r\n      }\r\n      toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen,\r\n            \r\n          });\r\n         \r\n\r\n      }\r\n      onDrop(picture) {\r\n          \r\n          if(picture.length) //if pictures isn't an empty object\r\n          {\r\n            this.setState({\r\n                file: new Blob(picture, {type: \"image/png\"})\r\n            })\r\n          }\r\n    }\r\n      //Snippet taken from https://stackoverflow.com/questions/31656689/how-to-save-img-to-users-local-computer-using-html2canvas\r\n   \r\n      takeScreenshot()\r\n      {\r\n          let element = document.getElementById('canvas-container')\r\n          if(element != null)\r\n            html2canvas(element, { allowTaint: false , windowWidth: element.width,\r\n                windowHeight: element.height}).then(function(canvas) {\r\n                    saveAs(canvas.toDataURL(), 'paveiksliukas.png');\r\n            });\r\n            this.setState({\r\n                isDropDownOpen: !this.state.isDropDownOpen\r\n              });\r\n      }\r\n      imageAdd(){\r\n        if(this.state.file !== null){\r\n            \r\n            this.props.addImage(URL.createObjectURL(this.state.file),\"400px\",\"400px\",0,0,\"image\", \"actors\");\r\n            removeFromImgUrl(URL.createObjectURL(this.state.file));   \r\n            this.setState({\r\n                file: null\r\n            })\r\n            this.toggleModal();  \r\n        }else {\r\n            alert(\"Pasirinkite paveiksliuką!\");\r\n        } \r\n      }\r\n\r\n    render()\r\n    {   \r\n        //<NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='logo' /></NavbarBrand>\r\n\r\n        return(\r\n\r\n            <div>\r\n            \r\n                <Navbar className=\"unselect\" dark>\r\n                    <div className=\"container\">\r\n                        <Nav className=\"ml-auto\">\r\n                        \r\n                            <Dropdown isOpen={this.state.isDropDownOpen} toggle={this.toggleDropDown} size=\"lg\">\r\n                            <DropdownToggle caret id =\"drop-custom\">\r\n                                    ...\r\n                            </DropdownToggle>\r\n                                <DropdownMenu style={{zIndex: \"9999999999\"}}  right>\r\n                                    <DropdownItem header>Pasirinkimai</DropdownItem>\r\n                                    <DropdownItem onClick={() => this.takeScreenshot()} >parsiųsk nuotrauką</DropdownItem>\r\n                                    <DropdownItem onClick={() => this.toggleModal()}>Įkelti savo nuotrauką</DropdownItem>\r\n                                </DropdownMenu>\r\n                            </Dropdown>\r\n                        </Nav>\r\n                    </div>\r\n                </Navbar>\r\n\r\n                <Modal zIndex='9999999' isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader  toggle={this.toggleModal}>Pasirinkite paveiksliuką</ModalHeader>\r\n                    \r\n                    <ImageUploader\r\n                withIcon={true}\r\n                withPreview={true}\r\n                buttonText='Choose images'\r\n                onChange={this.onDrop}\r\n                imgExtension={['.jpg', '.gif', '.png', '.gif']}\r\n                maxFileSize={5242880}\r\n                singleImage={true}\r\n            />    \r\n                    <ModalFooter>\r\n                    <button onClick={this.imageAdd} className=\"tool-btn p-1\">Ikelti paveiksliuką</button>\r\n                    </ModalFooter>\r\n      </Modal>\r\n               \r\n        </div>\r\n\r\n        );\r\n        \r\n            \r\n        \r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faArrowLeft, faArrowRight, faFolder } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\n\r\n\r\nconst RenderLeftArrow = ({ClickFunction, page}) =>\r\n{\r\n    if(page > 0)\r\n        return(\r\n\r\n            <div className=\"col-2 d-flex justify-content-center align-items-center unselect\"  >\r\n                <button onClick={() => ClickFunction()} className=\"unstyled\"><FontAwesomeIcon icon={faArrowLeft} className=\"active arrow\" /> </button>\r\n            </div>   \r\n        );\r\n    else\r\n        return(\r\n\r\n            <div className=\"col-2 d-flex justify-content-center align-items-center unselect\"  >\r\n                <button className=\"unstyled\"><FontAwesomeIcon icon={faArrowLeft} className=\"arrow\" /> </button>\r\n            </div>   \r\n        );\r\n\r\n}\r\nconst RenderRightArrow = ({ClickFunction, page}) =>\r\n{\r\n    if(page < 3)\r\n        return(\r\n\r\n            <div className=\"col-2 d-flex justify-content-center align-items-center unselect\"  >\r\n                <button onClick={() => ClickFunction()} className=\"unstyled\"><FontAwesomeIcon  icon={faArrowRight} className=\"active arrow\" /> </button>\r\n            </div>   \r\n        );\r\n    else\r\n        return(\r\n\r\n            <div className=\"col-2 d-flex justify-content-center align-items-center unselect\"  >\r\n                <button className=\"unstyled\"><FontAwesomeIcon  icon={faArrowRight} className=\"arrow\" /> </button>\r\n            </div>   \r\n        );\r\n\r\n}\r\nclass Select extends Component {\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            curPage: -1,\r\n            page: [\r\n                [\r\n                    [\"./assets/fonai/fonas_aikštė su fontanu.jpg\", 42, true],\r\n                    [\"./assets/fonai/fonas_kazimiero tapetas raudonas.jpg\", 43, true],\r\n                    [\"./assets/fonai/fonas_kazimiero tapetas.jpg\", 44, true],\r\n                    [\"./assets/fonai/fonas_kluatras.png\", 45, true],\r\n                    [\"./assets/fonai/fonas_medis su namukais.jpg\", 46, true],\r\n                    [\"./assets/fonai/fonas_nusitrynęs.png\", 47, true],\r\n                    [\"./assets/fonai/fonas_pagrindinis.jpg\", 48, true],\r\n                    [\"./assets/fonai/fonas_plytelės.jpg\", 49, true],\r\n                    [\"./assets/fonai/fonas_raudonas smulkus.png\", 50, true],\r\n                    [\"./assets/fonai/fonas_skliautai sulygiuoti.png\", 51, true],\r\n                    [\"./assets/fonai/fonas_skliautai.jpg\", 52, true],\r\n                    [\"./assets/fonai/fonas_žalias smulkus.png\", 53, true],\r\n\r\n\r\n                ],\r\n                [\r\n                    [\"./assets/detalės-architektūros/detalės_akantas.png\", 0, true, \"details\"],\r\n                    [\"./assets/detalės-architektūros/detalės_dorėninė kolona.png\", 1, true, \"details\"],\r\n                    [\"./assets/detalės-architektūros/detalės_durys atidarytos.png\", 2, true, \"details\"],\r\n                    [\"./assets/detalės-architektūros/detalės_durys puošnios.png\", 3, true, \"details\"],\r\n                    [\"./assets/detalės-architektūros/detalės_durys.png\", 4, true, \"details\"],\r\n                    [\"./assets/detalės-architektūros/detalės_freska.png\", 5, true, \"details\"],\r\n                    [\"./assets/detalės-architektūros/detalės_jonėninė kolona.png\", 6, true, \"details\"],\r\n                    [\"./assets/detalės-architektūros/detalės_kolona.png\", 7, true, \"details\"],\r\n                    [\"./assets/detalės-architektūros/detalės_korintinė kolona.png\", 8, true, \"details\"],\r\n                    [\"./assets/detalės-architektūros/detalės_kryžius.png\", 9, true, \"details\"],\r\n                    [\"./assets/detalės-architektūros/detalės_langas.png\", 10, true, \"details\"],\r\n                    [\"./assets/detalės-architektūros/detalės_rankos.png\", 11, true, \"details\"],\r\n                    [\"./assets/detalės-architektūros/detalės_relikvijorius.png\",12, true, \"details\"],\r\n                    [\"./assets/detalės-architektūros/detalės_rūta.png\", 13, true, \"details\"],\r\n                    [\"./assets/detalės-architektūros/detalės_skrynia.png\", 14, true, \"details\"],\r\n                    [\"./assets/detalės-architektūros/detalės_taurė.png\", 15, true, \"details\"],\r\n                    [\"./assets/detalės-architektūros/detalės_vargonai.png\", 16, true, \"details\"],\r\n                    [\"./assets/detalės-architektūros/detalės_žvakė su staliuku.png\", 17, true, \"details\"],\r\n                    [\"./assets/detalės-architektūros/detalės_žvakė.png\", 18, true, \"details\"],\r\n                    [\"./assets/detalės-architektūros/krumas.png\", 19, true, \"details\"]\r\n\r\n                ],\r\n                [\r\n                    [\"./assets/fasadai/fasadai_kripta.png\", 20, true, \"backgrounds\"],\r\n                    [\"./assets/fasadai/fasadai_nebaigta bažnyčia.png\", 21, true, \"backgrounds\"],\r\n                    [\"./assets/fasadai/fasadas_antkapinis paminklas_1000 px.png\", 22, true, \"backgrounds\"],\r\n                    [\"./assets/fasadai/fasadas_itališka koplyčia_1500 px.png\", 23, true, \"backgrounds\"],\r\n                    [\"./assets/fasadai/fasadas_katedros šešėlis.png\", 24, true, \"backgrounds\"],\r\n                    [\"./assets/fasadai/fasadas_mykolo png_2000 px.png\", 25, true, \"backgrounds\"]\r\n                  \r\n                          \r\n                ],\r\n                [\r\n                    [\"./assets/personažai/Animacija - vitruvijus rate 1500 px.png\", 26, true, \"actors\"],\r\n                    [\"./assets/personažai/bpm bona su knygom.png\", 27, true, \"actors\"],\r\n                    [\"./assets/personažai/personažai_bernardas.png\", 28, true, \"actors\"],\r\n                    [\"./assets/personažai/personažai_bona_800 px.png\", 29, true, \"actors\"],\r\n                    [\"./assets/personažai/personažai_darbininkas.png\", 30, true, \"actors\"],\r\n                    [\"./assets/personažai/personažai_didikas1.png\", 31, true, \"actors\"],\r\n                    [\"./assets/personažai/personažai_didikas2.png\", 32, true, \"actors\"],\r\n                    [\"./assets/personažai/personažai_mona lisa.png\", 33, true, \"actors\"], \r\n                    [\"./assets/personažai/personažai_mykolas mojuoja.png\", 34, true, \"actors\"],\r\n                    [\"./assets/personažai/personažai_mykolas sėdi.png\", 35, true, \"actors\"],\r\n                    [\"./assets/personažai/personažai_renesanso žmogus.png\", 36, true, \"actors\"] ,  \r\n                    [\"./assets/personažai/personažai_sapiega rate.png\", 37, true, \"actors\"],   \r\n                    [\"./assets/personažai/personažai_sapiega.png\", 38, true, \"actors\"],  \r\n                    [\"./assets/personažai/personažai_šešėliai.png\", 39, true, \"actors\"],  \r\n                    [\"./assets/personažai/personažai_valstiečiai.png\", 40, true, \"actors\"],   \r\n                    [\"./assets/personažai/personažai_vienuolės.png\", 41, true, \"actors\"], \r\n                              \r\n                ]\r\n            ]\r\n\r\n        };\r\n        this.RenderImageRow = this.RenderImageRow.bind(this);\r\n        this.handleArrowDecrease = this.handleArrowDecrease.bind(this);\r\n        this.handleArrowIncrease = this.handleArrowIncrease.bind(this);\r\n        this.imageClick = this.imageClick.bind(this);\r\n    }\r\n    imageClick =(e, {image}) => {\r\n        var canvas = document.getElementById('canvas-container');\r\n        var bounds = canvas.getBoundingClientRect();\r\n        var x, y;\r\n        x = bounds.width/2;\r\n        y = bounds.height/2;\r\n     //   image[2] = false; //prevents the image from being displayed in the img bar\r\n        this.props.onImageClick(image[0], \"auto\", 300, x, y, \"image\", image[3]);\r\n        this.setState(this.state);\r\n    }\r\n    handleArrowDecrease()\r\n    {\r\n        if(this.state.curPage >= 0)\r\n        {\r\n            this.setState({\r\n                curPage: this.state.curPage - 1\r\n            })\r\n        } \r\n    }\r\n    handleArrowIncrease()\r\n    {\r\n        this.setState({\r\n            curPage: this.state.curPage + 1\r\n        })\r\n    }\r\n    viewFolder(number){\r\n        this.setState({\r\n            curPage: number\r\n        })\r\n    }\r\n    RenderImageRow()\r\n    {\r\n\r\n        let imageSet = [ <div onClick={() => this.viewFolder(-1)} className=\"images folders m-1\"><FontAwesomeIcon  style={{width: \"100%\", height: \"85%\"}}icon= {faFolder} /><span   className=\"p-0\">....</span></div> ,\r\n    ];\r\n        if(this.state.curPage != -1){\r\n            imageSet = [...imageSet , this.state.page[this.state.curPage].map((image) => {\r\n                if(image[2] && this.state.curPage != 0) {\r\n                    return(\r\n                        \r\n                        //  <div className=\"images m-1\"> <img key={image[1]} onClick={(e) => this.imageClick(e, {image})}height=\"100%\" width=\"100%\" src={image[0]}></img></div> \r\n                        <div className=\"images m-1\"> <img key={image[1]} onClick={(e) => this.imageClick(e, {image})} style={{maxWidth: \"100%\", maxHeight: \"100%\"}} src={image[0]}></img></div> \r\n                      ); \r\n                } else if(image[2]) {\r\n\r\n                    return(\r\n                        \r\n                        //  <div className=\"images m-1\"> <img key={image[1]} onClick={(e) => this.imageClick(e, {image})}height=\"100%\" width=\"100%\" src={image[0]}></img></div> \r\n                        <div className=\"images m-1\"> <img key={image[1]} onClick={() => this.props.changeCanvasBackground(image[0])} style={{maxWidth: \"100%\", maxHeight: \"100%\"}} src={image[0]}></img></div> \r\n                      ); \r\n                }\r\n    \r\n          })];\r\n        }\r\n        else {\r\n           \r\n            imageSet = [\r\n                <div onClick={() => this.viewFolder(0)}className=\"images folders m-1\"><FontAwesomeIcon  style={{width: \"100%\", height: \"85%\"}}icon= {faFolder} /><span   className=\"p-0\">Fonai</span></div> ,\r\n                <div onClick={() => this.viewFolder(1)}className=\"images folders m-1\"> <FontAwesomeIcon  style={{width: \"100%\", height: \"85%\"}}icon= {faFolder} /><span  className=\"p-0\">Architektūros detalės</span></div> ,\r\n                <div onClick={() => this.viewFolder(2)}className=\"images folders m-1\"> <FontAwesomeIcon  style={{width: \"100%\", height: \"85%\"}}icon= {faFolder} /><span  className=\"p-0\">Fasadai</span></div> ,\r\n                <div onClick={() => this.viewFolder(3)}className=\"images folders m-1\"> <FontAwesomeIcon  style={{width: \"100%\", height: \"85%\"}}icon= {faFolder} /><span  className=\"p-0\">Personažai</span></div>\r\n\r\n            ];\r\n\r\n\r\n        }\r\n   \r\n    return(\r\n                <div className=\"row\">\r\n                    <RenderLeftArrow ClickFunction={() => this.handleArrowDecrease()} page={this.state.curPage}/>\r\n                    <div className=\"col-8\">     \r\n                        <div className=\"image-row\">\r\n                        {imageSet}\r\n                        </div>\r\n                        </div>\r\n                   <RenderRightArrow ClickFunction={() => this.handleArrowIncrease()} page={this.state.curPage} />\r\n                </div>\r\n    );\r\n}\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                {this.RenderImageRow()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Select;","//this will be very easy, right?\r\n//OFFCANVAS\r\nimport React from \"react\";\r\nimport { Row, Col, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\r\nimport { faEraser, faMousePointer, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Component } from \"react\";\r\n\r\n class RenderBar extends Component {\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state={\r\n            isDropDownOpen: false,\r\n            delButtonPressed: false,\r\n            createButtonPressed: false,\r\n            fontSize: 18,\r\n            fontSelectActive: false,\r\n            textID: 0\r\n\r\n        }\r\n        this.RenderSideBar = this.RenderSideBar.bind(this);\r\n        this.RenderMobileBar = this.RenderMobileBar.bind(this);\r\n        this.DelBtnClickFunction = this.DelBtnClickFunction.bind(this);\r\n        this.createBtnClickFunction = this.createBtnClickFunction.bind(this);\r\n        this.toggleDropDowns = this.toggleDropDowns.bind(this);\r\n        this.changeFontSize = this.changeFontSize.bind(this);\r\n    }\r\n    toggleDropDowns() {\r\n     \r\n          this.setState(prevState => ({\r\n            isDropDownOpen: !prevState.isDropDownOpen\r\n          }));\r\n      }\r\n    DelBtnClickFunction()  {\r\n        this.props.onDelButtonClick();\r\n        this.setState({\r\n            delButtonPressed: !this.state.delButtonPressed\r\n        });\r\n    }\r\n    createBtnClickFunction()  {\r\n        this.props.createWordButtonToggle();\r\n        this.setState({\r\n            createButtonPressed: !this.state.createButtonPressed\r\n        });\r\n    }\r\n    changeCreatebtn() {\r\n        this.setState({\r\n            createButtonPressed: !this.state.createButtonPressed\r\n        });\r\n    }\r\n    changeFontSize(size) {\r\n        \r\n        this.setState({\r\n            fontSize: size\r\n        })\r\n        this.props.changeFont(this.state.textID, size);\r\n    }\r\n    enableDropBtn(type, fontSize, textID){\r\n        if(type === \"textbox\"){\r\n            this.setState({\r\n                fontSelectActive: true,\r\n                fontSize: fontSize,\r\n                textID: textID\r\n            })\r\n        } else {\r\n            this.setState({\r\n                fontSelectActive: false,\r\n                fontSize: 0,\r\n                textID: 0\r\n            })\r\n        }\r\n    }\r\n    RenderDropDownMenu(){\r\n        if(this.state.fontSelectActive){\r\n           \r\n            const fontSizes = [34, 30, 26, 22, 18, 14, 10];\r\n            var x = 0;\r\n            const dropDownItems = fontSizes.map(element => {\r\n                x++;\r\n                return(\r\n                    <DropdownItem key={x} onMouseDown={() => this.changeFontSize(element)} onTouchStart={() => this.changeFontSize(element)}>{element}</DropdownItem>\r\n                );\r\n                    \r\n            });\r\n            return(\r\n                <Dropdown inNavbar={true} isOpen={this.state.isDropDownOpen} toggle={this.toggleDropDowns} className=\"p-0\" size=\"lg\">\r\n                <DropdownToggle style={{width:\"100%\"}} caret id =\"drop-custom\">\r\n                                 {this.state.fontSize}   \r\n                </DropdownToggle>\r\n                <DropdownMenu style={{textAlign: \"center\", width: \"100%\", zIndex: \"9999999999\"}}  right>  \r\n                \r\n                    {dropDownItems}\r\n    \r\n                </DropdownMenu>\r\n            </Dropdown>\r\n            );\r\n        } else {\r\n            return(\r\n                <button style={{backgroundColor: \"gray\", height: \"45px\",width:\"100%\"}} id =\"drop-custom\">\r\n                                  \r\n                </button>\r\n            );\r\n        }\r\n      \r\n\r\n    }\r\n    RenderSideBar(){\r\n        return(\r\n            <div className=\"col-2 d-none d-md-block\">\r\n            <Row><button style={{backgroundColor: this.state.createButtonPressed ? '#d40b1b' : '#d1847b'}} \r\n            onClick={this.createBtnClickFunction} className=\"tool-btn mb-2\"><FontAwesomeIcon icon={faPencilAlt}/></button></Row>\r\n            <Row><button style={{backgroundColor: this.state.delButtonPressed ? '#d40b1b' : '#d1847b'}} \r\n            onClick={this.DelBtnClickFunction} className=\"tool-btn mb-2\"><FontAwesomeIcon icon={faEraser}/></button></Row>\r\n            <Row>{this.RenderDropDownMenu()}</Row>\r\n            </div>\r\n        );\r\n    }\r\n    RenderMobileBar(){\r\n        return(\r\n            <div className=\"row d-md-none mb-2\">\r\n            <Col>{this.RenderDropDownMenu()}</Col>\r\n            <Col><button style={{backgroundColor: this.state.createButtonPressed ? '#d40b1b' : '#d1847b'}} \r\n            onClick={this.createBtnClickFunction} className=\"tool-btn mb-2\"><FontAwesomeIcon icon={faPencilAlt}/></button></Col>\r\n            <Col><button style={{backgroundColor: this.state.delButtonPressed ? '#d40b1b' : '#d1847b'}} \r\n            onClick={this.DelBtnClickFunction} className=\"tool-btn mb-2\"><FontAwesomeIcon icon={faEraser}/></button>  </Col>\r\n            </div> \r\n        );\r\n    }\r\n    render(){\r\n\r\n        return(\r\n            <>\r\n            {this.RenderSideBar()}\r\n            {this.RenderMobileBar()}\r\n            \r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n\r\n }   \r\n\r\n\r\n\r\n\r\nexport default RenderBar;\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCircleNotch} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst RenderImage = ({deleteImage, onSelectImage, image}) => {\r\n    \r\n    var coordinateX=image.cordx;\r\n   \r\n    var coordinatesY=image.cordy-image.height/2;\r\n    if(image.type == \"image\")\r\n    {\r\n        return(\r\n            <div key={image.id} width={image.width} height={image.height} className={`draggable ${image.selected ? \"selected\" : \"\"}`} style={{zIndex: image.zIndex, top: coordinatesY, left: coordinateX }} >\r\n            <img onClick={(e) => deleteImage(e, {image})} onMouseDown={(e) => onSelectImage(e, {image})} onTouchStart={(e) => onSelectImage(e, {image})} \r\n            \r\n            src={image.imgUrl} width={\"100%\"} height={\"100%\"}/>\r\n            {image.selected ? <FontAwesomeIcon className=\"rotation-handle\" icon={faCircleNotch}/> : <> </>}\r\n         \r\n            </div>\r\n\r\n        );\r\n    } else if(image.type == \"textbox\"){\r\n        return(\r\n            <div onMouseDown={(e) => onSelectImage(e, {image})} onTouchStart={(e) => onSelectImage(e, {image})} width={image.width} height={image.height} className={`draggable ${image.selected ? \"selected\" : \"\"}`} style={{zIndex: image.zIndex, top: image.cordy, left: image.cordx}}>\r\n            <input className=\"inputText\"style={{fontSize: image.textSize}}placeholder=\".....\"onClick={(e) => deleteImage(e, {image})} key={image.id}  \r\n            type=\"textbox\"></input>\r\n               {image.selected ? <FontAwesomeIcon className=\"rotation-handle\" icon={faCircleNotch}/> : <> </>}\r\n            </div>\r\n\r\n        );\r\n    }\r\n \r\n}\r\n\r\nconst RenderDragableImages = (props) => {\r\n    const activeImages = props.dragImages.map((image) => {\r\n            return(\r\n                <RenderImage deleteImage={props.deleteImage} onSelectImage={props.onSelectImage} image={image}/>  \r\n        );\r\n});\r\n    return(\r\n        <>\r\n        {activeImages}\r\n        </>\r\n    );\r\n    }\r\n\r\n\r\nexport default RenderDragableImages;","import React, { Component } from \"react\";\r\nimport DragableImages from './imageDrag';\r\n\r\n\r\nclass RenderCanvas extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            backgroundImage: \"\"\r\n        }\r\n\r\n    }\r\n\r\n    changeBackground(backgroundURL){\r\n        console.log(backgroundURL);\r\n        this.setState({\r\n           backgroundImage: backgroundURL\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <div  style={{backgroundImage: `url(\"${this.state.backgroundImage}\")`, backgroundSize: \"cover\",backgroundRepeat: \"no-repeat\"}} onClick={this.props.createNewWord} id=\"canvas-container\">\r\n            <DragableImages deleteImage={this.props.deleteImage} onSelectImage={this.props.onSelectImage} dragImages={this.props.dragImage}/>\r\n    \r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default RenderCanvas;","import React from \"react\";\r\n\r\n\r\nconst Footer = () =>\r\n{\r\n\r\n    return(\r\n        <div className=\"footer unselect\"></div>\r\n    );\r\n\r\n}\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\nimport NavBar from './HeaderComponent';\r\nimport Select from './ItemSelector';\r\nimport RenderBar from './ToolsSideBar';\r\nimport { Container } from 'reactstrap';\r\nimport RenderCanvas from './Canvas';\r\nimport Footer from './FooterComponent';\r\n\r\n\r\n// get type of image. fasadai +0, architeturos detales +5000, veikejai +10000\r\n\r\n\r\n//created new image, set imagetype z index + selectedZindex. increment SelectzIndex\r\n//select ends, just leave it\r\n\r\n//item selected zindex = imagetype z index + selectedZindex. increment selectzindex\r\n\r\n//The z-indexes for image types\r\nconst backgrounds = 0;\r\nconst details = 5000;\r\nconst actors = 10000;\r\nclass Main extends Component {\r\n    \r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state= {\r\n\r\n            dragImage: [],\r\n            selectedID: null,\r\n            deleteOnSelect: false,\r\n            createWord: false,\r\n            cursor: 'default',\r\n            selectedZindex: 1\r\n        }\r\n        this.toolbtns = React.createRef();\r\n        this.canvasRef = React.createRef();\r\n    }\r\n    //Creates a new object array with the new item added to it  \r\n    createNewArray = (item) =>\r\n    {\r\n        let newDragImages = [...this.state.dragImage, item]\r\n        if(this.state.selectedID!= null)\r\n            {\r\n                newDragImages.find(selectedImg => selectedImg.id === this.state.selectedID).selected = false; //changes the selected item\r\n              //  newDragImages.find(selectedImg => selectedImg.id === this.state.selectedID).zIndex = this.state.selectedZindex;\r\n            }\r\n        return newDragImages;\r\n\r\n    }\r\n    changeFontSize = (id, fontSize) => {\r\n        let tempArray = [...this.state.dragImage];\r\n        tempArray.find(selectedTextBox => selectedTextBox.id === id).textSize = fontSize;\r\n        this.setState({\r\n            dragImage: tempArray\r\n        })\r\n    }\r\n    delButtonToggle = () => {\r\n        \r\n      \r\n        var cursor = !this.state.deleteOnSelect ? 'alias' : 'default';\r\n        this.setState({\r\n            deleteOnSelect: !this.state.deleteOnSelect,\r\n            cursor: cursor\r\n        })\r\n    }\r\n    createWordButtonToggle = () => {\r\n        var cursor = !this.state.createWord ? 'alias' : 'default';\r\n        this.setState({\r\n            createWord: !this.state.createWord,\r\n            cursor: cursor\r\n        })\r\n    }\r\n    getZindex = (imageType) => {\r\n        var zindex = this.state.selectedZindex;\r\n        if(imageType === \"actors\") {\r\n            zindex+=actors;\r\n        } else if(imageType === \"backgrounds\"){\r\n            zindex+=backgrounds;\r\n        } else if(imageType === \"details\"){\r\n            zindex+=details;\r\n        }\r\n        return zindex;\r\n\r\n    }\r\n    onImageClick = (imgUrl, width, height, xx, yy, typee, imageType) =>{\r\n        var idd = this.state.dragImage.length;\r\n        let item = {\r\n            type: typee,\r\n            imgUrl: imgUrl, \r\n            width: width,\r\n            height: height,\r\n            cordx: xx,\r\n            cordy: yy,\r\n            id: idd,\r\n            zIndex: 999999,\r\n            selected: true,\r\n            textSize: 18,\r\n            imagePrio: imageType\r\n            } \r\n            item.zIndex = this.getZindex(item.imagePrio);\r\n        let newDragImages = this.createNewArray(item);\r\n            \r\n            this.setState({\r\n                dragImage: newDragImages,\r\n                selectedID: idd,\r\n                selectedZindex: this.state.selectedZindex+1\r\n            })\r\n          //  this.toolbtns.current.enableDropBtn(typee);\r\n    }\r\n    deleteImage = (e, {image}) =>\r\n    {\r\n        if(this.state.deleteOnSelect)\r\n        {\r\n            e.target.parentNode.remove();\r\n\r\n            let updatedArray = [...this.state.dragImage]; //make a copy of the state\r\n                updatedArray.filter(removeImage => removeImage !== {image})\r\n             //changes the selected item\r\n            this.setState({\r\n                dragImage: updatedArray,\r\n                selectedID: null\r\n            })\r\n            this.toolbtns.current.enableDropBtn(\"\");\r\n        }\r\n    }\r\n    createNewWord = (e) => {\r\n        var canvas = document.getElementById('canvas-container');\r\n        var bounds = canvas.getBoundingClientRect();\r\n        if(this.state.createWord) {\r\n            var x, y;\r\n            if(e.type == 'touchstart' || e.type == 'touchmove' || e.type == 'touchend' || e.type == 'touchcancel'){\r\n                var evt = (typeof e.originalEvent === 'undefined') ? e : e.originalEvent;\r\n                var touch = evt.touches[0] || evt.changedTouches[0];\r\n                x = touch.pageX;\r\n                y = touch.pageY;\r\n            } else if (e.type == 'mousedown' || e.type == 'mouseup' || e.type == 'mousemove' || e.type == 'mouseover'|| e.type=='mouseout' || e.type=='mouseenter' || e.type=='mouseleave') {\r\n                x = e.clientX;\r\n                y = e.clientY;\r\n            }\r\n            else{\r\n                x=e.clientX;\r\n                y=e.clientY;\r\n            }\r\n        \r\n            \r\n            var xx = x - bounds.left;\r\n            var yy = y - bounds.top;\r\n            this.onImageClick(\"\",\"auto\",\"auto\",xx,yy,\"textbox\", \"actors\"); //creates new text box\r\n            this.createWordButtonToggle();\r\n            this.toolbtns.current.changeCreatebtn();\r\n        }\r\n\r\n    }\r\n    //changes the selected image\r\n    onSelectImage = (e, {image}) =>\r\n    {\r\n        if(image.id != this.state.selectedID)\r\n        {\r\n            let activeImageArray = [...this.state.dragImage]; //make a copy of the state\r\n            if(this.state.selectedID!= null)\r\n            {\r\n                activeImageArray.find(selectedImg => selectedImg.id === this.state.selectedID).selected = false; //changes the selected item\r\n               // activeImageArray.find(selectedImg => selectedImg.id === this.state.selectedID).zIndex = this.state.selectedZindex;\r\n            }\r\n            activeImageArray.find(selectedImg => selectedImg.id === image.id).selected = true; //finds the item selected\r\n\r\n            activeImageArray.find(selectedImg => selectedImg.id === image.id).zIndex = this.getZindex(image.imagePrio);\r\n            this.setState({\r\n                dragImage: activeImageArray,\r\n                selectedID: image.id,\r\n                selectedZindex: this.state.selectedZindex+1\r\n            })\r\n           this.toolbtns.current.enableDropBtn(image.type, image.textSize, image.id);\r\n        }\r\n\r\n\r\n    }\r\n    CancelSelect = (e) =>\r\n    {  \r\n        var selectedItem = e.target.nodeName;\r\n       \r\n        if(this.state.selectedID!= null && selectedItem != 'IMG' && selectedItem != \"INPUT\")\r\n        {\r\n           \r\n            let activeImageArray = [...this.state.dragImage]; //make a copy of the state\r\n            activeImageArray.find(selectedImg => selectedImg.id === this.state.selectedID).selected = false; //changes the selected item\r\n           // activeImageArray.find(selectedImg => selectedImg.id === this.state.selectedID).zIndex = this.state.selectedZindex;\r\n            this.setState({\r\n                dragImage: activeImageArray,\r\n                selectedID: null,\r\n                \r\n            })\r\n        }\r\n    }\r\n    changeCanvasBackground = (backgroundURL) => {\r\n       \r\n        this.canvasRef.current.changeBackground(backgroundURL);\r\n        \r\n    }\r\n    \r\n    render()\r\n    {\r\n        window.onclick = (e) => this.CancelSelect(e); //cancels the select on click \r\n\r\n        return(\r\n            \r\n            <div style={{cursor: this.state.cursor}}>\r\n                \r\n                <NavBar addImage={this.onImageClick} />\r\n                <Container fluid=\"lg unselect\">\r\n                    <div className=\"row mt-2 unselect\">\r\n                        \r\n                            <Select changeCanvasBackground={this.changeCanvasBackground} onImageClick={this.onImageClick}/>\r\n                        \r\n                    </div>\r\n                    \r\n                    <div className=\"row mt-2\">\r\n                        <RenderBar ref={this.toolbtns} changeFont={this.changeFontSize} createWordButtonToggle={this.createWordButtonToggle} onDelButtonClick={this.delButtonToggle}/>\r\n                    <div className=\"col-12 col-md-8\" > <RenderCanvas ref={this.canvasRef} createNewWord={this.createNewWord} deleteImage={this.deleteImage} onSelectImage={this.onSelectImage} dragImage={this.state.dragImage}/> </div>\r\n                        \r\n                    </div>\r\n                </Container>\r\n                <Footer />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Main;","\r\nimport interact from 'interactjs'\r\n\r\ninteract('.draggable')\r\n    .draggable({\r\n      // disable inertial throwing\r\n      inertia: false,\r\n      // keep the element within the area of it's parent\r\n      modifiers: [\r\n        interact.modifiers.restrictRect({\r\n        \r\n          endOnly: true\r\n        })\r\n      ],\r\n      // enable autoScroll\r\n      autoScroll: true,\r\n  \r\n      listeners: {\r\n        // call this function on every dragmove event\r\n        move: dragMoveListener,\r\n  \r\n        // call this function on every dragend event\r\n        end: ( event) => {\r\n       //   event.target.style.zIndex=\"1\";\r\n        }\r\n      }\r\n    }).resizable({\r\n        // resize from all edges and corners\r\n        edges: { left: false, right: true, bottom: true, top: false },\r\n    \r\n        listeners: {\r\n          move (event) {\r\n            var target = event.target\r\n            var x = (parseFloat(target.getAttribute('data-x')) || 0)\r\n            var y = (parseFloat(target.getAttribute('data-y')) || 0)\r\n            var angle = target.getAttribute('data-angle') || 0;\r\n            target.setAttribute('data-angle', 0);\r\n            // update the element's style\r\n            target.style.width = event.rect.width + 'px'\r\n            target.style.height = event.rect.height + 'px'\r\n            \r\n    \r\n            // translate when resizing from top or left edges\r\n            x += event.deltaRect.left\r\n            y += event.deltaRect.top\r\n    \r\n            target.style.transform = 'translate(' + x + 'px,' + y + 'px) rotate(' + 0 + 'rad' + ')';\r\n\r\n          }\r\n        },\r\n        modifiers: [\r\n          // keep the edges inside the parent\r\n          interact.modifiers.restrictEdges({\r\n           \r\n          }),\r\n    \r\n          // minimum size\r\n          interact.modifiers.restrictSize({\r\n            min: { width: 10, height: 10 }\r\n          })\r\n        ],\r\n    \r\n        inertia: false\r\n      })\r\n\r\n      interact('.rotation-handle')\r\n      .draggable({\r\n        onstart: function(event) {\r\n          var box = event.target.parentElement;\r\n          var rect = box.getBoundingClientRect();\r\n    \r\n          // store the center as the element has css `transform-origin: center center`\r\n          box.setAttribute('data-center-x', rect.left + rect.width / 2);\r\n          box.setAttribute('data-center-y', rect.top + rect.height / 2);\r\n          // get the angle of the element when the drag starts\r\n          box.setAttribute('data-angle', getDragAngle(event));\r\n        },\r\n        onmove: function(event) {\r\n          var box = event.target.parentElement;\r\n    \r\n          var pos = {\r\n            x: parseFloat(box.getAttribute('data-x')) || 0,\r\n            y: parseFloat(box.getAttribute('data-y')) || 0\r\n          };\r\n    \r\n          var angle = getDragAngle(event);\r\n    \r\n          // update transform style on dragmove\r\n          box.style.transform = 'translate(' + pos.x + 'px, ' + pos.y + 'px) rotate(' + angle + 'rad' + ')';\r\n        },\r\n        onend: function(event) {\r\n          var box = event.target.parentElement;\r\n    \r\n          // save the angle on dragend\r\n          box.setAttribute('data-angle', getDragAngle(event));\r\n        },\r\n      })\r\n    \r\n    function getDragAngle(event) {\r\n      var box = event.target.parentElement;\r\n      var startAngle = parseFloat(box.getAttribute('data-angle')) || 0;\r\n      var center = {\r\n        x: parseFloat(box.getAttribute('data-center-x')) || 0,\r\n        y: parseFloat(box.getAttribute('data-center-y')) || 0\r\n      };\r\n      var angle = Math.atan2(center.y - event.clientY,\r\n        center.x - event.clientX);\r\n    \r\n      return angle - startAngle;\r\n    }\r\n    function dragMoveListener (event) {\r\n\r\n      \r\n        var target = event.target\r\n       // target.style.zIndex = \"99999999\";\r\n        // keep the dragged position in the data-x/data-y attributes\r\n        var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx\r\n        var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy\r\n      \r\n        // translate the element\r\n        target.style.transform = 'translate(' + x + 'px, ' + y + 'px) rotate(' + (target.getAttribute('data-angle') || 0) + 'rad' + ')';\r\n      \r\n        // update the posiion attributes\r\n        target.setAttribute('data-x', x)\r\n        target.setAttribute('data-y', y)\r\n      }\r\n      \r\n      // this function is used later in the resizing and gesture demos\r\n      window.dragMoveListener = dragMoveListener","\nimport './App.css';\nimport Main from './components/MainComponent';\nimport './DragAPI';\nfunction App() {\n  return (\n    \n    <Main />\n    \n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { HashRouter as Router } from \"react-router-dom\"\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}